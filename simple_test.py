#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ UI.
"""

import tkinter as tk
from tkinter import ttk
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def main():
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç."""
    print("üß™ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –æ–∫–Ω–æ
        root = tk.Tk()
        root.title("–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç")
        root.geometry("600x400")
        root.configure(bg="#2b2b2b")
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å—Ç–∏–ª–∏
        style = ttk.Style()
        style.theme_use('clam')
        
        # –ë–∞–∑–æ–≤—ã–µ —Å—Ç–∏–ª–∏
        style.configure('Modern.TFrame', background='#2b2b2b')
        style.configure('Modern.TLabelFrame', 
                       background='#3c3c3c', 
                       foreground='#ffffff',
                       borderwidth=1,
                       relief='solid')
        style.configure('Modern.TLabelFrame.Label', 
                       background='#3c3c3c', 
                       foreground='#ffffff',
                       font=('Segoe UI', 10, 'bold'))
        style.configure('Modern.TLabel', 
                       background='#3c3c3c', 
                       foreground='#ffffff',
                       font=('Segoe UI', 9))
        style.configure('Modern.TButton', 
                       background='#0078d4',
                       foreground='#ffffff',
                       font=('Segoe UI', 9, 'bold'),
                       borderwidth=0,
                       focuscolor='none')
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        main_frame = ttk.Frame(root, style='Modern.TFrame')
        main_frame.pack(fill=tk.BOTH, expand=True, padx=10, pady=10)
        
        # –¢–µ—Å—Ç 1: –¶–≤–µ—Ç–æ–≤—ã–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
        color_frame = ttk.LabelFrame(main_frame, 
                                    text="üé® –¶–≤–µ—Ç–æ–≤—ã–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è", 
                                    style='Modern.TLabelFrame',
                                    padding="10")
        color_frame.pack(fill=tk.X, pady=5)
        
        color_label = ttk.Label(color_frame, text="–õ–æ–≥–∞—Ä–∏—Ñ–º–∏—á–µ—Å–∫–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ", style='Modern.TLabel')
        color_label.pack(anchor=tk.W)
        
        # –¢–µ—Å—Ç 2: –§–∏–ª—å—Ç—Ä—ã —Å–≥–ª–∞–∂–∏–≤–∞–Ω–∏—è
        smoothing_frame = ttk.LabelFrame(main_frame, 
                                       text="üåä –§–∏–ª—å—Ç—Ä—ã —Å–≥–ª–∞–∂–∏–≤–∞–Ω–∏—è", 
                                       style='Modern.TLabelFrame',
                                       padding="10")
        smoothing_frame.pack(fill=tk.X, pady=5)
        
        smoothing_label = ttk.Label(smoothing_frame, text="–ü—Ä—è–º–æ—É–≥–æ–ª—å–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä 3x3", style='Modern.TLabel')
        smoothing_label.pack(anchor=tk.W)
        
        # –¢–µ—Å—Ç 3: –§–∏–ª—å—Ç—Ä—ã —Ä–µ–∑–∫–æ—Å—Ç–∏
        sharpness_frame = ttk.LabelFrame(main_frame, 
                                       text="üîç –§–∏–ª—å—Ç—Ä—ã —Ä–µ–∑–∫–æ—Å—Ç–∏", 
                                       style='Modern.TLabelFrame',
                                       padding="10")
        sharpness_frame.pack(fill=tk.X, pady=5)
        
        sharpness_label = ttk.Label(sharpness_frame, text="–ù–µ—Ä–µ–∑–∫–æ–µ –º–∞—Å–∫–∏—Ä–æ–≤–∞–Ω–∏–µ k=3, Œª=1.0", style='Modern.TLabel')
        sharpness_label.pack(anchor=tk.W)
        
        # –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è
        close_btn = ttk.Button(main_frame, text="‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω - –ó–∞–∫—Ä—ã—Ç—å", style='Modern.TButton', command=root.destroy)
        close_btn.pack(pady=10)
        
        print("‚úÖ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("üéâ –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–π UI —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–∫–Ω–æ
        root.mainloop()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()
