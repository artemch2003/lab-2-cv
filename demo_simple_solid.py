"""
–£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞ –ø–æ –ø—Ä–∏–Ω—Ü–∏–ø–∞–º SOLID.
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from image_processing.transforms.negative_transform import NegativeTransform
from image_processing.factories.transform_factory import TransformFactory


def demonstrate_solid_principles():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø—Ä–∏–Ω—Ü–∏–ø—ã SOLID."""
    print("üöÄ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞ –ø–æ –ø—Ä–∏–Ω—Ü–∏–ø–∞–º SOLID")
    print("=" * 60)
    
    # 1. Single Responsibility Principle (SRP)
    print("\n1. Single Responsibility Principle (SRP):")
    print("   ‚úÖ –ö–∞–∂–¥—ã–π –∫–ª–∞—Å—Å –∏–º–µ–µ—Ç –æ–¥–Ω—É –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å:")
    print("   - ImageManager: —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏")
    print("   - TransformManager: —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è–º–∏")
    print("   - TransformSettings: –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ UI")
    print("   - ImageDisplay: –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
    print("   - InfoPanel: –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å")
    
    # 2. Open/Closed Principle (OCP)
    print("\n2. Open/Closed Principle (OCP):")
    print("   ‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ—Ç–∫—Ä—ã—Ç–∞ –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è, –∑–∞–∫—Ä—ã—Ç–∞ –¥–ª—è –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏:")
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –Ω–æ–≤–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ
    TransformFactory.register_transform("–ù–µ–≥–∞—Ç–∏–≤–Ω–æ–µ", NegativeTransform)
    print("   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ '–ù–µ–≥–∞—Ç–∏–≤–Ω–æ–µ' –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–¥–∞")
    
    # 3. Liskov Substitution Principle (LSP)
    print("\n3. Liskov Substitution Principle (LSP):")
    print("   ‚úÖ –í—Å–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –≤–∑–∞–∏–º–æ–∑–∞–º–µ–Ω—è–µ–º—ã:")
    available_transforms = TransformFactory.get_available_transforms()
    print(f"   ‚úÖ –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è: {', '.join(available_transforms)}")
    
    # 4. Interface Segregation Principle (ISP)
    print("\n4. Interface Segregation Principle (ISP):")
    print("   ‚úÖ –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –ø–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏:")
    print("   - BaseTransform: –±–∞–∑–æ–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–π")
    print("   - –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞")
    
    # 5. Dependency Inversion Principle (DIP)
    print("\n5. Dependency Inversion Principle (DIP):")
    print("   ‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —á–µ—Ä–µ–∑ –∞–±—Å—Ç—Ä–∞–∫—Ü–∏–∏:")
    print("   - ImageProcessor –∏—Å–ø–æ–ª—å–∑—É–µ—Ç ImageManager –∏ TransformManager")
    print("   - TransformManager –∏—Å–ø–æ–ª—å–∑—É–µ—Ç TransformFactory")
    print("   - –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã")
    
    print("\nüéâ –í—Å–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã SOLID —É—Å–ø–µ—à–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã!")
    print("=" * 60)


def show_architecture():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞."""
    print("\nüìÅ –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ –ø–æ—Å–ª–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞:")
    print("""
image_processing/
‚îú‚îÄ‚îÄ transforms/           # –ê–ª–≥–æ—Ä–∏—Ç–º—ã –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–π
‚îÇ   ‚îú‚îÄ‚îÄ base_transform.py
‚îÇ   ‚îú‚îÄ‚îÄ logarithmic_transform.py
‚îÇ   ‚îú‚îÄ‚îÄ power_transform.py
‚îÇ   ‚îú‚îÄ‚îÄ binary_transform.py
‚îÇ   ‚îú‚îÄ‚îÄ brightness_range_transform.py
‚îÇ   ‚îî‚îÄ‚îÄ negative_transform.py
‚îú‚îÄ‚îÄ factories/           # –§–∞–±—Ä–∏–∫–∏
‚îÇ   ‚îî‚îÄ‚îÄ transform_factory.py
‚îú‚îÄ‚îÄ image_manager.py     # –ú–µ–Ω–µ–¥–∂–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
‚îú‚îÄ‚îÄ transform_manager.py # –ú–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–π
‚îî‚îÄ‚îÄ image_processor.py   # –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π

gui/
‚îú‚îÄ‚îÄ components/          # –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã UI
‚îÇ   ‚îú‚îÄ‚îÄ transform_settings.py
‚îÇ   ‚îú‚îÄ‚îÄ image_display.py
‚îÇ   ‚îî‚îÄ‚îÄ info_panel.py
‚îî‚îÄ‚îÄ main_window.py       # –ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ

utils/
‚îî‚îÄ‚îÄ validators.py        # –í–∞–ª–∏–¥–∞—Ç–æ—Ä—ã
    """)


def show_benefits():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞."""
    print("\nüöÄ –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞:")
    print("""
‚úÖ –ß–∏—Ç–∞–µ–º–æ—Å—Ç—å –∫–æ–¥–∞:
   - –ö–∞–∂–¥—ã–π –∫–ª–∞—Å—Å –∏–º–µ–µ—Ç —á–µ—Ç–∫—É—é –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å
   - –õ–µ–≥–∫–æ –ø–æ–Ω—è—Ç—å –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞

‚úÖ –¢–µ—Å—Ç–∏—Ä—É–µ–º–æ—Å—Ç—å:
   - –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –º–æ–∫–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
   - –ò–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤

‚úÖ –†–∞—Å—à–∏—Ä—è–µ–º–æ—Å—Ç—å:
   - –õ–µ–≥–∫–æ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
   - –ü—Ä–æ—Å—Ç–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤

‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ—Å—Ç—å:
   - –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –æ–¥–Ω–æ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ –Ω–µ –≤–ª–∏—è—é—Ç –Ω–∞ –¥—Ä—É–≥–∏–µ
   - –ß–µ—Ç–∫–æ–µ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏

‚úÖ –ü–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
   - –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –¥—Ä—É–≥–∏—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö
   - –ú–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞
    """)


if __name__ == "__main__":
    demonstrate_solid_principles()
    show_architecture()
    show_benefits()
    
    print("\n" + "=" * 60)
    print("–î–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
    print("python main.py")
    print("–∏–ª–∏")
    print("python run.py")
    print("=" * 60)
